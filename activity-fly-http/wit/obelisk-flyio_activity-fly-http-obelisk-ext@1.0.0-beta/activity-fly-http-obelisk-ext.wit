// Generated by Obelisk 0.24.2
package obelisk-flyio:activity-fly-http-obelisk-ext@1.0.0-beta;

interface apps {
  use obelisk:types/execution@2.0.0.{execution-id, join-set-id, await-next-extension-error, get-extension-error, execution-failed};
  use obelisk-flyio:activity-fly-http/apps@1.0.0-beta.{app};

  put-submit: func(join-set-id: borrow<join-set-id>, org-slug: string, app-name: string) -> execution-id;

  put-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id, result<app, string>>, await-next-extension-error>;

  put-get: func(execution-id: execution-id) -> result<result<app, string>, get-extension-error>;

  put-invoke: func(org-slug: string, app-name: string) -> result<result<app, string>, execution-failed>;

  list-submit: func(join-set-id: borrow<join-set-id>, org-slug: string) -> execution-id;

  list-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id, result<list<app>, string>>, await-next-extension-error>;

  list-get: func(execution-id: execution-id) -> result<result<list<app>, string>, get-extension-error>;

  list-invoke: func(org-slug: string) -> result<result<list<app>, string>, execution-failed>;

  delete-submit: func(join-set-id: borrow<join-set-id>, app-name: string, force: bool) -> execution-id;

  delete-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id, result<_, string>>, await-next-extension-error>;

  delete-get: func(execution-id: execution-id) -> result<result<_, string>, get-extension-error>;

  delete-invoke: func(app-name: string, force: bool) -> result<result<_, string>, execution-failed>;
}

interface volumes {
  use obelisk:types/execution@2.0.0.{execution-id, join-set-id, await-next-extension-error, get-extension-error, execution-failed};
  use obelisk-flyio:activity-fly-http/volumes@1.0.0-beta.{region, volume-id, volume, volume-create-request};

  list-submit: func(join-set-id: borrow<join-set-id>, app-name: string) -> execution-id;

  list-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id, result<list<volume>, string>>, await-next-extension-error>;

  list-get: func(execution-id: execution-id) -> result<result<list<volume>, string>, get-extension-error>;

  list-invoke: func(app-name: string) -> result<result<list<volume>, string>, execution-failed>;

  create-submit: func(join-set-id: borrow<join-set-id>, app-name: string, request: volume-create-request) -> execution-id;

  create-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id, result<volume, string>>, await-next-extension-error>;

  create-get: func(execution-id: execution-id) -> result<result<volume, string>, get-extension-error>;

  create-invoke: func(app-name: string, request: volume-create-request) -> result<result<volume, string>, execution-failed>;

  get-submit: func(join-set-id: borrow<join-set-id>, app-name: string, volume-id: volume-id) -> execution-id;

  get-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id, result<volume, string>>, await-next-extension-error>;

  get-get: func(execution-id: execution-id) -> result<result<volume, string>, get-extension-error>;

  get-invoke: func(app-name: string, volume-id: volume-id) -> result<result<volume, string>, execution-failed>;

  extend-submit: func(join-set-id: borrow<join-set-id>, app-name: string, volume-id: volume-id, new-size-gb: u32) -> execution-id;

  extend-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id, result<_, string>>, await-next-extension-error>;

  extend-get: func(execution-id: execution-id) -> result<result<_, string>, get-extension-error>;

  extend-invoke: func(app-name: string, volume-id: volume-id, new-size-gb: u32) -> result<result<_, string>, execution-failed>;

  delete-submit: func(join-set-id: borrow<join-set-id>, app-name: string, volume-id: volume-id) -> execution-id;

  delete-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id, result<_, string>>, await-next-extension-error>;

  delete-get: func(execution-id: execution-id) -> result<result<_, string>, get-extension-error>;

  delete-invoke: func(app-name: string, volume-id: volume-id) -> result<result<_, string>, execution-failed>;
}

interface machines {
  use obelisk:types/execution@2.0.0.{execution-id, join-set-id, await-next-extension-error, get-extension-error, execution-failed};
  use obelisk-flyio:activity-fly-http/machines@1.0.0-beta.{region, volume-id, machine-id, machine-state, host-status, mount, cpu-kind, guest-config, restart-policy, machine-restart, init-config, stop-config, exec-response, service-protocol, port-handler, port-config, service-config, machine-config, machine};

  list-submit: func(join-set-id: borrow<join-set-id>, app-name: string) -> execution-id;

  list-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id, result<list<machine>, string>>, await-next-extension-error>;

  list-get: func(execution-id: execution-id) -> result<result<list<machine>, string>, get-extension-error>;

  list-invoke: func(app-name: string) -> result<result<list<machine>, string>, execution-failed>;

  create-submit: func(join-set-id: borrow<join-set-id>, app-name: string, machine-name: string, machine-config: machine-config, region: option<region>) -> execution-id;

  create-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id, result<string, string>>, await-next-extension-error>;

  create-get: func(execution-id: execution-id) -> result<result<string, string>, get-extension-error>;

  create-invoke: func(app-name: string, machine-name: string, machine-config: machine-config, region: option<region>) -> result<result<string, string>, execution-failed>;

  update-submit: func(join-set-id: borrow<join-set-id>, app-name: string, machine-id: machine-id, machine-config: machine-config, region: option<region>) -> execution-id;

  update-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id, result<_, string>>, await-next-extension-error>;

  update-get: func(execution-id: execution-id) -> result<result<_, string>, get-extension-error>;

  update-invoke: func(app-name: string, machine-id: machine-id, machine-config: machine-config, region: option<region>) -> result<result<_, string>, execution-failed>;

  suspend-submit: func(join-set-id: borrow<join-set-id>, app-name: string, machine-id: machine-id) -> execution-id;

  suspend-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id, result<_, string>>, await-next-extension-error>;

  suspend-get: func(execution-id: execution-id) -> result<result<_, string>, get-extension-error>;

  suspend-invoke: func(app-name: string, machine-id: machine-id) -> result<result<_, string>, execution-failed>;

  stop-submit: func(join-set-id: borrow<join-set-id>, app-name: string, machine-id: machine-id) -> execution-id;

  stop-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id, result<_, string>>, await-next-extension-error>;

  stop-get: func(execution-id: execution-id) -> result<result<_, string>, get-extension-error>;

  stop-invoke: func(app-name: string, machine-id: machine-id) -> result<result<_, string>, execution-failed>;

  start-submit: func(join-set-id: borrow<join-set-id>, app-name: string, machine-id: machine-id) -> execution-id;

  start-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id, result<_, string>>, await-next-extension-error>;

  start-get: func(execution-id: execution-id) -> result<result<_, string>, get-extension-error>;

  start-invoke: func(app-name: string, machine-id: machine-id) -> result<result<_, string>, execution-failed>;

  restart-submit: func(join-set-id: borrow<join-set-id>, app-name: string, machine-id: machine-id) -> execution-id;

  restart-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id, result<_, string>>, await-next-extension-error>;

  restart-get: func(execution-id: execution-id) -> result<result<_, string>, get-extension-error>;

  restart-invoke: func(app-name: string, machine-id: machine-id) -> result<result<_, string>, execution-failed>;

  delete-submit: func(join-set-id: borrow<join-set-id>, app-name: string, machine-id: machine-id, force: bool) -> execution-id;

  delete-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id, result<_, string>>, await-next-extension-error>;

  delete-get: func(execution-id: execution-id) -> result<result<_, string>, get-extension-error>;

  delete-invoke: func(app-name: string, machine-id: machine-id, force: bool) -> result<result<_, string>, execution-failed>;

  exec-submit: func(join-set-id: borrow<join-set-id>, app-name: string, machine-id: machine-id, command: list<string>) -> execution-id;

  exec-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id, result<exec-response, string>>, await-next-extension-error>;

  exec-get: func(execution-id: execution-id) -> result<result<exec-response, string>, get-extension-error>;

  exec-invoke: func(app-name: string, machine-id: machine-id, command: list<string>) -> result<result<exec-response, string>, execution-failed>;
}

interface secrets {
  use obelisk:types/execution@2.0.0.{execution-id, join-set-id, await-next-extension-error, get-extension-error, execution-failed};
  use obelisk-flyio:activity-fly-http/secrets@1.0.0-beta.{secret};

  list-submit: func(join-set-id: borrow<join-set-id>, app-name: string) -> execution-id;

  list-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id, result<list<secret>, string>>, await-next-extension-error>;

  list-get: func(execution-id: execution-id) -> result<result<list<secret>, string>, get-extension-error>;

  list-invoke: func(app-name: string) -> result<result<list<secret>, string>, execution-failed>;

  delete-submit: func(join-set-id: borrow<join-set-id>, app-name: string, secret-name: string) -> execution-id;

  delete-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id, result<_, string>>, await-next-extension-error>;

  delete-get: func(execution-id: execution-id) -> result<result<_, string>, get-extension-error>;

  delete-invoke: func(app-name: string, secret-name: string) -> result<result<_, string>, execution-failed>;
}

