// Generated by obelisk 0.24.1
package activity-flyio:fly-http-obelisk-ext@1.0.0-beta;

interface app {
  use obelisk:types/execution@2.0.0.{execution-id, join-set-id, await-next-extension-error, get-extension-error};
  use activity-flyio:fly-http/app@1.0.0-beta.{app};

  create-submit: func(join-set-id: borrow<join-set-id>, org-slug: string, app-name: string) -> execution-id;

  create-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id, result<app, string>>, await-next-extension-error>;

  create-get: func(execution-id: execution-id) -> result<result<app, string>, get-extension-error>;

  list-submit: func(join-set-id: borrow<join-set-id>, org-slug: string) -> execution-id;

  list-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id, result<list<app>, string>>, await-next-extension-error>;

  list-get: func(execution-id: execution-id) -> result<result<list<app>, string>, get-extension-error>;

  delete-submit: func(join-set-id: borrow<join-set-id>, app-name: string, force: bool) -> execution-id;

  delete-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id, result<_, string>>, await-next-extension-error>;

  delete-get: func(execution-id: execution-id) -> result<result<_, string>, get-extension-error>;
}

interface machine {
  use obelisk:types/execution@2.0.0.{execution-id, join-set-id, await-next-extension-error, get-extension-error};
  use activity-flyio:fly-http/machine@1.0.0-beta.{machine-state, cpu-kind, guest-config, machine-region, restart-policy, machine-restart, init-config, stop-config, machine-config, exec-response};

  create-submit: func(join-set-id: borrow<join-set-id>, app-name: string, machine-name: string, machine-config: machine-config) -> execution-id;

  create-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id, result<string, string>>, await-next-extension-error>;

  create-get: func(execution-id: execution-id) -> result<result<string, string>, get-extension-error>;

  update-submit: func(join-set-id: borrow<join-set-id>, app-name: string, machine-id: string, machine-config: machine-config) -> execution-id;

  update-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id, result<_, string>>, await-next-extension-error>;

  update-get: func(execution-id: execution-id) -> result<result<_, string>, get-extension-error>;

  suspend-submit: func(join-set-id: borrow<join-set-id>, app-name: string, machine-id: string) -> execution-id;

  suspend-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id, result<_, string>>, await-next-extension-error>;

  suspend-get: func(execution-id: execution-id) -> result<result<_, string>, get-extension-error>;

  stop-submit: func(join-set-id: borrow<join-set-id>, app-name: string, machine-id: string) -> execution-id;

  stop-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id, result<_, string>>, await-next-extension-error>;

  stop-get: func(execution-id: execution-id) -> result<result<_, string>, get-extension-error>;

  start-submit: func(join-set-id: borrow<join-set-id>, app-name: string, machine-id: string) -> execution-id;

  start-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id, result<_, string>>, await-next-extension-error>;

  start-get: func(execution-id: execution-id) -> result<result<_, string>, get-extension-error>;

  delete-submit: func(join-set-id: borrow<join-set-id>, app-name: string, machine-id: string, force: bool) -> execution-id;

  delete-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id, result<_, string>>, await-next-extension-error>;

  delete-get: func(execution-id: execution-id) -> result<result<_, string>, get-extension-error>;

  exec-submit: func(join-set-id: borrow<join-set-id>, app-name: string, machine-id: string, command: list<string>) -> execution-id;

  exec-await-next: func(join-set-id: borrow<join-set-id>) -> result<tuple<execution-id, result<exec-response, string>>, await-next-extension-error>;

  exec-get: func(execution-id: execution-id) -> result<result<exec-response, string>, get-extension-error>;
}

